#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Role {
	Civilian, // Мирный житель
	Mafia,    // Мафия
	Don,      // Мафия (Дон)
	Sheriff,  // Шериф
	Doctor,   // Доктор
	Maniac,   // Маньяк
}

// Здесь мы определяем методы, которые будут доступны для любого значения типа Role.
impl Role {
	/// &self - означает, что метод заимствует экземпляр, но не изменяет его.
	/// &'static str - возвращает строковый срез, который "вшит" в программу и существует всё время её жизни.
	/// Это очень эффективно по памяти и скорости.
	pub fn get_name(&self) -> &'static str {
		match self {
			Role::Civilian => "Мирный житель",
			Role::Mafia => "Мафия",
			Role::Don => "Мафия (Дон)",
			Role::Sheriff => "Шериф",
			Role::Doctor => "Доктор",
			Role::Maniac => "Маньяк",
		}
	}

	/// Возвращает полное описание роли и её целей в игре.
	pub fn get_description(&self) -> &'static str {
		match self {
			Role::Civilian => "Ваша цель - выжить и вычислить всех членов мафии. Вы побеждаете, когда в городе не остается мафии.",
			Role::Mafia => "Вы - член мафии. Ночью вы просыпаетесь вместе с другими мафиози и выбираете жертву. Ваша цель - добиться численного равенства с мирными жителями.",
			Role::Don => "Вы - глава мафии. Ночью вы принимаете окончательное решение по выбору жертвы. Также ночью вы можете проверить одного из игроков, чтобы узнать, является ли он Шерифом.",
			Role::Sheriff => "Вы - Шериф. Ночью вы можете проверить одного из игроков, чтобы узнать, принадлежит ли он к мафии. Ваша цель - помочь мирным жителям найти и казнить мафию.",
			Role::Doctor => "Вы - Доктор. Ночью вы можете 'вылечить' одного игрока, спасая его от выстрела мафии. Вы не можете лечить одного и того же игрока две ночи подряд (по классическим правилам).",
			Role::Maniac => "Вы играете сами за себя. Каждую ночь вы просыпаетесь и выбираете, кого убить. Ваша цель — остаться последним выжившим в городе.",
		}
	}
}